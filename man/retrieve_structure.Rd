% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/retrieve_structure.R
\name{retrieve_structure}
\alias{retrieve_structure}
\title{Retrieve any SDMX **structure artefact** from a .Stat Suite API}
\usage{
retrieve_structure(
  environment,
  data_space,
  structure,
  ...,
  detail = "allcompletestubs"
)
}
\value{
An **`xml2::xml_document`** containing the SDMX‑XML payload.
        Combine with helpers like [`parse_dataflows()`],
        [`parse_codelists()`], or [`parse_dsds()`] to obtain tidy tables.
}
\description{
Retrieve any SDMX **structure artefact** from a .Stat Suite API
}
\section{Arguments}{

* **`environment`** – either `"qa"` or `"prod"` (case‑insensitive).
  Passed straight to `build_root_url()`.
* **`data_space`**  – one of the sub‑domains your organisation uses
  (e.g. `"design"`, `"disseminate"`, `"staging"`). **Do not** include
  the protocol prefix.
* **`structure`**   – the SDMX path segment, such as
  `"datastructure/OECD/DSD_SNA_TABLE1/1.0"` or `"codelist/all/latest"`.
* **`...`**         – additional query parameters (name–value pairs) that
  will be added to the request, for example `references = "children"`.
* **`detail`**      – SDMX `detail` query parameter.  Defaults to
  `"allcompletestubs"`, the most complete form supported by .Stat Suite.
}

\examples{
\dontrun{
  # Pull a single DSD from QA design space
  xml <- retrieve_structure(
    environment = "qa",
    data_space  = "design",
    structure   = "datastructure/OECD/DSD_SNA_TABLE1/1.0"
  )

  # Get *all* codelists, but only direct children, not references
  xml <- retrieve_structure(
    "qa", "design",
    "codelist/all/latest",
    references = "none"
  )
}
}
